[
  {
    "objectID": "vignettes/grouped_operations_with_margins.html",
    "href": "vignettes/grouped_operations_with_margins.html",
    "title": "Grouped operations with margins",
    "section": "",
    "text": "This article introduces the following functions that make grouped operations with margins easier.\nFirst, load the required libraries.\nlibrary(swm)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nPrepare dummy data.\ndf1 &lt;- tribble(\n  ~year, ~cat, ~subcat,       ~g1,         ~g2,           ~id, ~value,\n  2020,  \"A\",  \"a1\",          1L,          \"y\",           \"1\", 5,\n  2020,  \"A\",  \"a2\",          2L,          \"x\",           \"2\", NA_real_,\n  2020,  \"B\",  NA_character_, 2L,          \"x\",           \"3\", 1,\n  2020,  \"B\",  \"b2\",          1L,          \"x\",           \"4\", 8,\n  2021,  \"A\",  \"a1\",          NA_integer_, \"x\",           \"1\", 4,\n  2021,  \"A\",  \"a2\",          1L,          \"y\",           \"2\", 7,\n  2021,  \"B\",  \"b1\",          1L,          NA_character_, \"3\", 3,\n  2021,  \"B\",  \"b2\",          2L,          \"y\",           \"4\", 9,\n) |&gt; \n  mutate(\n    cat = factor(cat),\n    subcat = factor(subcat, ordered = TRUE),\n    g2 = factor(g2, exclude = NULL)\n  )\n\ndf1\n\n# A tibble: 8 × 7\n   year cat   subcat    g1 g2    id    value\n  &lt;dbl&gt; &lt;fct&gt; &lt;ord&gt;  &lt;int&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt;\n1  2020 A     a1         1 y     1         5\n2  2020 A     a2         2 x     2        NA\n3  2020 B     &lt;NA&gt;       2 x     3         1\n4  2020 B     b2         1 x     4         8\n5  2021 A     a1        NA x     1         4\n6  2021 A     a2         1 y     2         7\n7  2021 B     b1         1 &lt;NA&gt;  3         3\n8  2021 B     b2         2 y     4         9\nCheck the level of the factors and whether they are ordered.\ndf1_factors &lt;- select(df1, where(is.factor))\n\nlapply(df1_factors, levels)\n\n$cat\n[1] \"A\" \"B\"\n\n$subcat\n[1] \"a1\" \"a2\" \"b1\" \"b2\"\n\n$g2\n[1] \"x\" \"y\" NA \n\nlapply(df1_factors, is.ordered)\n\n$cat\n[1] FALSE\n\n$subcat\n[1] TRUE\n\n$g2\n[1] FALSE\nNote that NA is included in g2 level.\nsubcat is an order factor.\nCount each cat, subcat and find the average of the values.\ndf1 |&gt;\n  summarise(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .by = c(cat, subcat)\n  )\n\n# A tibble: 5 × 4\n  cat   subcat     n value\n  &lt;fct&gt; &lt;ord&gt;  &lt;int&gt; &lt;dbl&gt;\n1 A     a1         2   4.5\n2 A     a2         2   7  \n3 B     &lt;NA&gt;       1   1  \n4 B     b2         2   8.5\n5 B     b1         1   3\nBut what if you want to calculate the cat total, subcat total together? summarise_with_margins() is useful in this case.",
    "crumbs": [
      "Articles",
      "Grouped operations with margins"
    ]
  },
  {
    "objectID": "vignettes/grouped_operations_with_margins.html#summarise_with_margins",
    "href": "vignettes/grouped_operations_with_margins.html#summarise_with_margins",
    "title": "Grouped operations with margins",
    "section": "1 summarise_with_margins()",
    "text": "1 summarise_with_margins()\n\n\n\n\n\n\nLazy tables are available\n\n\n\nsummarise_with_margins() and union_all_with_margins() works with a local data frame or lazy table.\n\n\n\n1.1 .margins\nIf you want to include the respective totals hierarchically in cat, subcat, include them in .margins. Variables can be specified by tidy-select.\n\nres1 &lt;- df1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat)\n  )\n\nres1\n\n# A tibble: 8 × 4\n  cat   subcat     n value\n  &lt;fct&gt; &lt;ord&gt;  &lt;int&gt; &lt;dbl&gt;\n1 (all) (all)      8  5.29\n2 A     (all)      4  5.33\n3 A     a1         2  4.5 \n4 A     a2         2  7   \n5 B     (all)      4  5.25\n6 B     b1         1  3   \n7 B     b2         2  8.5 \n8 B     &lt;NA&gt;       1  1   \n\n\n(all) was created; cat and subcat remained (ordered) factor.\nSee factor levels.\n\nlapply(res1, levels)\n\n$cat\n[1] \"(all)\" \"A\"     \"B\"    \n\n$subcat\n[1] \"(all)\" \"a1\"    \"a2\"    \"b1\"    \"b2\"   \n\n$n\nNULL\n\n$value\nNULL\n\n\n(all) was added to the beginning of the factor level.\n\n\n1.2 .without_all\nIn the example above, all the years were combined. Let’s assume here that we aggregate by year and do not want multi-year totals. In that case, use .without_all. Variables can be specified by tidy-select.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .without_all = year\n  )\n\n# A tibble: 14 × 5\n    year cat   subcat     n  value\n   &lt;dbl&gt; &lt;fct&gt; &lt;ord&gt;  &lt;int&gt;  &lt;dbl&gt;\n 1  2020 (all) (all)      4   4.67\n 2  2020 A     (all)      2   5   \n 3  2020 A     a1         1   5   \n 4  2020 A     a2         1 NaN   \n 5  2020 B     (all)      2   4.5 \n 6  2020 B     b2         1   8   \n 7  2020 B     &lt;NA&gt;       1   1   \n 8  2021 (all) (all)      4   5.75\n 9  2021 A     (all)      2   5.5 \n10  2021 A     a1         1   4   \n11  2021 A     a2         1   7   \n12  2021 B     (all)      2   6   \n13  2021 B     b1         1   3   \n14  2021 B     b2         1   9   \n\n\nEach margin has been calculated for each group in year.\n\n\n1.3 .with_all\nFurthermore, we want to add g1 to the group variables. We want to also include a total of g1. However, unlike cat and subcat, g1 does not have a hierarchical structure. In such cases, use .with_all. Variables can be specified by tidy-select.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .without_all = year,\n    .with_all = g1\n  ) |&gt; \n  print(n = Inf)\n\n# A tibble: 35 × 6\n    year cat   subcat g1        n  value\n   &lt;dbl&gt; &lt;fct&gt; &lt;ord&gt;  &lt;chr&gt; &lt;int&gt;  &lt;dbl&gt;\n 1  2020 (all) (all)  (all)     4   4.67\n 2  2020 (all) (all)  1         2   6.5 \n 3  2020 (all) (all)  2         2   1   \n 4  2020 A     (all)  (all)     2   5   \n 5  2020 A     (all)  1         1   5   \n 6  2020 A     (all)  2         1 NaN   \n 7  2020 A     a1     (all)     1   5   \n 8  2020 A     a1     1         1   5   \n 9  2020 A     a2     (all)     1 NaN   \n10  2020 A     a2     2         1 NaN   \n11  2020 B     (all)  (all)     2   4.5 \n12  2020 B     (all)  1         1   8   \n13  2020 B     (all)  2         1   1   \n14  2020 B     b2     (all)     1   8   \n15  2020 B     b2     1         1   8   \n16  2020 B     &lt;NA&gt;   (all)     1   1   \n17  2020 B     &lt;NA&gt;   2         1   1   \n18  2021 (all) (all)  (all)     4   5.75\n19  2021 (all) (all)  1         2   5   \n20  2021 (all) (all)  2         1   9   \n21  2021 (all) (all)  &lt;NA&gt;      1   4   \n22  2021 A     (all)  (all)     2   5.5 \n23  2021 A     (all)  1         1   7   \n24  2021 A     (all)  &lt;NA&gt;      1   4   \n25  2021 A     a1     (all)     1   4   \n26  2021 A     a1     &lt;NA&gt;      1   4   \n27  2021 A     a2     (all)     1   7   \n28  2021 A     a2     1         1   7   \n29  2021 B     (all)  (all)     2   6   \n30  2021 B     (all)  1         1   3   \n31  2021 B     (all)  2         1   9   \n32  2021 B     b1     (all)     1   3   \n33  2021 B     b1     1         1   3   \n34  2021 B     b2     (all)     1   9   \n35  2021 B     b2     2         1   9   \n\n\nFor all combinations of year, cat and subcat, all combinations including (all) in g1 were aggregated.\ng1 was of type integer, but is now of type string. This is due to the addition of (all).\nIf you want to add g2 as well, you can do so as follows.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .without_all = year,\n    .with_all = c(g1, g2)\n  ) |&gt; \n  print(n = Inf)\n\n# A tibble: 78 × 7\n    year cat   subcat g1    g2        n  value\n   &lt;dbl&gt; &lt;fct&gt; &lt;ord&gt;  &lt;chr&gt; &lt;fct&gt; &lt;int&gt;  &lt;dbl&gt;\n 1  2020 (all) (all)  (all) (all)     4   4.67\n 2  2020 (all) (all)  (all) x         3   4.5 \n 3  2020 (all) (all)  (all) y         1   5   \n 4  2020 (all) (all)  1     (all)     2   6.5 \n 5  2020 (all) (all)  1     x         1   8   \n 6  2020 (all) (all)  1     y         1   5   \n 7  2020 (all) (all)  2     (all)     2   1   \n 8  2020 (all) (all)  2     x         2   1   \n 9  2020 A     (all)  (all) (all)     2   5   \n10  2020 A     (all)  (all) x         1 NaN   \n11  2020 A     (all)  (all) y         1   5   \n12  2020 A     (all)  1     (all)     1   5   \n13  2020 A     (all)  1     y         1   5   \n14  2020 A     (all)  2     (all)     1 NaN   \n15  2020 A     (all)  2     x         1 NaN   \n16  2020 A     a1     (all) (all)     1   5   \n17  2020 A     a1     (all) y         1   5   \n18  2020 A     a1     1     (all)     1   5   \n19  2020 A     a1     1     y         1   5   \n20  2020 A     a2     (all) (all)     1 NaN   \n21  2020 A     a2     (all) x         1 NaN   \n22  2020 A     a2     2     (all)     1 NaN   \n23  2020 A     a2     2     x         1 NaN   \n24  2020 B     (all)  (all) (all)     2   4.5 \n25  2020 B     (all)  (all) x         2   4.5 \n26  2020 B     (all)  1     (all)     1   8   \n27  2020 B     (all)  1     x         1   8   \n28  2020 B     (all)  2     (all)     1   1   \n29  2020 B     (all)  2     x         1   1   \n30  2020 B     b2     (all) (all)     1   8   \n31  2020 B     b2     (all) x         1   8   \n32  2020 B     b2     1     (all)     1   8   \n33  2020 B     b2     1     x         1   8   \n34  2020 B     &lt;NA&gt;   (all) (all)     1   1   \n35  2020 B     &lt;NA&gt;   (all) x         1   1   \n36  2020 B     &lt;NA&gt;   2     (all)     1   1   \n37  2020 B     &lt;NA&gt;   2     x         1   1   \n38  2021 (all) (all)  (all) (all)     4   5.75\n39  2021 (all) (all)  (all) x         1   4   \n40  2021 (all) (all)  (all) y         2   8   \n41  2021 (all) (all)  (all) &lt;NA&gt;      1   3   \n42  2021 (all) (all)  1     (all)     2   5   \n43  2021 (all) (all)  1     y         1   7   \n44  2021 (all) (all)  1     &lt;NA&gt;      1   3   \n45  2021 (all) (all)  2     (all)     1   9   \n46  2021 (all) (all)  2     y         1   9   \n47  2021 (all) (all)  &lt;NA&gt;  (all)     1   4   \n48  2021 (all) (all)  &lt;NA&gt;  x         1   4   \n49  2021 A     (all)  (all) (all)     2   5.5 \n50  2021 A     (all)  (all) x         1   4   \n51  2021 A     (all)  (all) y         1   7   \n52  2021 A     (all)  1     (all)     1   7   \n53  2021 A     (all)  1     y         1   7   \n54  2021 A     (all)  &lt;NA&gt;  (all)     1   4   \n55  2021 A     (all)  &lt;NA&gt;  x         1   4   \n56  2021 A     a1     (all) (all)     1   4   \n57  2021 A     a1     (all) x         1   4   \n58  2021 A     a1     &lt;NA&gt;  (all)     1   4   \n59  2021 A     a1     &lt;NA&gt;  x         1   4   \n60  2021 A     a2     (all) (all)     1   7   \n61  2021 A     a2     (all) y         1   7   \n62  2021 A     a2     1     (all)     1   7   \n63  2021 A     a2     1     y         1   7   \n64  2021 B     (all)  (all) (all)     2   6   \n65  2021 B     (all)  (all) y         1   9   \n66  2021 B     (all)  (all) &lt;NA&gt;      1   3   \n67  2021 B     (all)  1     (all)     1   3   \n68  2021 B     (all)  1     &lt;NA&gt;      1   3   \n69  2021 B     (all)  2     (all)     1   9   \n70  2021 B     (all)  2     y         1   9   \n71  2021 B     b1     (all) (all)     1   3   \n72  2021 B     b1     (all) &lt;NA&gt;      1   3   \n73  2021 B     b1     1     (all)     1   3   \n74  2021 B     b1     1     &lt;NA&gt;      1   3   \n75  2021 B     b2     (all) (all)     1   9   \n76  2021 B     b2     (all) y         1   9   \n77  2021 B     b2     2     (all)     1   9   \n78  2021 B     b2     2     y         1   9   \n\n\nFor all combinations of year, cat, subcat and g1, all combinations including (all) in g2 were aggregated.\n\n\n1.4 .sort\nIf .sort = TRUE, sort the result by the column order specified in .without_all and .margins and .with_all to make the results easier to see. The default is is.data.frame(.data). This is because pipelines using lazy tables should perform the SQL ORDER BY as last as possible (See arrange() documentation of {dbplyr} for details).\nIn the above examples, the results were sorted because the data is a local data frame. If .sort = FALSE, the result is as follows.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .without_all = year,\n    .with_all = c(g1, g2),\n    .sort = FALSE\n  ) |&gt; \n  print(n = Inf)\n\n# A tibble: 78 × 7\n    year cat   subcat g1    g2        n  value\n   &lt;dbl&gt; &lt;fct&gt; &lt;ord&gt;  &lt;chr&gt; &lt;fct&gt; &lt;int&gt;  &lt;dbl&gt;\n 1  2020 (all) (all)  (all) (all)     4   4.67\n 2  2021 (all) (all)  (all) (all)     4   5.75\n 3  2020 (all) (all)  (all) y         1   5   \n 4  2020 (all) (all)  (all) x         3   4.5 \n 5  2021 (all) (all)  (all) x         1   4   \n 6  2021 (all) (all)  (all) y         2   8   \n 7  2021 (all) (all)  (all) &lt;NA&gt;      1   3   \n 8  2020 (all) (all)  1     (all)     2   6.5 \n 9  2020 (all) (all)  2     (all)     2   1   \n10  2021 (all) (all)  &lt;NA&gt;  (all)     1   4   \n11  2021 (all) (all)  1     (all)     2   5   \n12  2021 (all) (all)  2     (all)     1   9   \n13  2020 (all) (all)  1     y         1   5   \n14  2020 (all) (all)  2     x         2   1   \n15  2020 (all) (all)  1     x         1   8   \n16  2021 (all) (all)  &lt;NA&gt;  x         1   4   \n17  2021 (all) (all)  1     y         1   7   \n18  2021 (all) (all)  1     &lt;NA&gt;      1   3   \n19  2021 (all) (all)  2     y         1   9   \n20  2020 A     (all)  (all) (all)     2   5   \n21  2020 B     (all)  (all) (all)     2   4.5 \n22  2021 A     (all)  (all) (all)     2   5.5 \n23  2021 B     (all)  (all) (all)     2   6   \n24  2020 A     (all)  (all) y         1   5   \n25  2020 A     (all)  (all) x         1 NaN   \n26  2020 B     (all)  (all) x         2   4.5 \n27  2021 A     (all)  (all) x         1   4   \n28  2021 A     (all)  (all) y         1   7   \n29  2021 B     (all)  (all) &lt;NA&gt;      1   3   \n30  2021 B     (all)  (all) y         1   9   \n31  2020 A     (all)  1     (all)     1   5   \n32  2020 A     (all)  2     (all)     1 NaN   \n33  2020 B     (all)  2     (all)     1   1   \n34  2020 B     (all)  1     (all)     1   8   \n35  2021 A     (all)  &lt;NA&gt;  (all)     1   4   \n36  2021 A     (all)  1     (all)     1   7   \n37  2021 B     (all)  1     (all)     1   3   \n38  2021 B     (all)  2     (all)     1   9   \n39  2020 A     (all)  1     y         1   5   \n40  2020 A     (all)  2     x         1 NaN   \n41  2020 B     (all)  2     x         1   1   \n42  2020 B     (all)  1     x         1   8   \n43  2021 A     (all)  &lt;NA&gt;  x         1   4   \n44  2021 A     (all)  1     y         1   7   \n45  2021 B     (all)  1     &lt;NA&gt;      1   3   \n46  2021 B     (all)  2     y         1   9   \n47  2020 A     a1     (all) (all)     1   5   \n48  2020 A     a2     (all) (all)     1 NaN   \n49  2020 B     &lt;NA&gt;   (all) (all)     1   1   \n50  2020 B     b2     (all) (all)     1   8   \n51  2021 A     a1     (all) (all)     1   4   \n52  2021 A     a2     (all) (all)     1   7   \n53  2021 B     b1     (all) (all)     1   3   \n54  2021 B     b2     (all) (all)     1   9   \n55  2020 A     a1     (all) y         1   5   \n56  2020 A     a2     (all) x         1 NaN   \n57  2020 B     &lt;NA&gt;   (all) x         1   1   \n58  2020 B     b2     (all) x         1   8   \n59  2021 A     a1     (all) x         1   4   \n60  2021 A     a2     (all) y         1   7   \n61  2021 B     b1     (all) &lt;NA&gt;      1   3   \n62  2021 B     b2     (all) y         1   9   \n63  2020 A     a1     1     (all)     1   5   \n64  2020 A     a2     2     (all)     1 NaN   \n65  2020 B     &lt;NA&gt;   2     (all)     1   1   \n66  2020 B     b2     1     (all)     1   8   \n67  2021 A     a1     &lt;NA&gt;  (all)     1   4   \n68  2021 A     a2     1     (all)     1   7   \n69  2021 B     b1     1     (all)     1   3   \n70  2021 B     b2     2     (all)     1   9   \n71  2020 A     a1     1     y         1   5   \n72  2020 A     a2     2     x         1 NaN   \n73  2020 B     &lt;NA&gt;   2     x         1   1   \n74  2020 B     b2     1     x         1   8   \n75  2021 A     a1     &lt;NA&gt;  x         1   4   \n76  2021 A     a2     1     y         1   7   \n77  2021 B     b1     1     &lt;NA&gt;      1   3   \n78  2021 B     b2     2     y         1   9   \n\n\n\n\n1.5 .margin_name\nBy default “(all)” is used for the name of the margin, but this can be changed with the .margin_name argument.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .margin_name = \"Total\"\n  )\n\n# A tibble: 8 × 4\n  cat   subcat     n value\n  &lt;fct&gt; &lt;ord&gt;  &lt;int&gt; &lt;dbl&gt;\n1 Total Total      8  5.29\n2 A     Total      4  5.33\n3 A     a1         2  4.5 \n4 A     a2         2  7   \n5 B     Total      4  5.25\n6 B     b1         1  3   \n7 B     b2         2  8.5 \n8 B     &lt;NA&gt;       1  1   \n\n\nThe .margin_name cannot be one already used in .margins or .with_all, where the new total category is to be created.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = c(cat, subcat),\n    .margin_name = \"A\"\n  )\n\nError in assert_margin_name(dplyr::select(.data, tidyselect::all_of(margin_vars_all)), : \"A\" is not allowed as a margin name because it is already contained in the following columns: `cat`\n\n\nNA_character_ can be used for .margin_name, but it is similarly checked if it is already in use.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins =  c(cat, subcat),\n    .margin_name = NA_character_\n  )\n\nError in assert_margin_name(dplyr::select(.data, tidyselect::all_of(margin_vars_all)), : NA is not allowed as a margin name because it is already contained in the following columns: `subcat`\n\n\nError occurred. Because there are NAs in subcat. On the other hand, there is no NA in cat, so the following example works.\n\nres2 &lt;- df1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .margins = cat,\n    .margin_name = NA_character_\n  )\n\nres2\n\n# A tibble: 3 × 3\n  cat       n value\n  &lt;fct&gt; &lt;int&gt; &lt;dbl&gt;\n1 A         4  5.33\n2 B         4  5.25\n3 &lt;NA&gt;      8  5.29\n\n\nNA was used instead of (all).\nIf .margin_name is NA_character_, what is the level of factor in cat?\n\nlevels(res2$cat)\n\n[1] \"A\" \"B\"\n\n\nNA is not included in the factor level. This is the same behaviour as the default base::factor().\n\n\n\n\n\n\nWarning\n\n\n\nIf .margin_name is NA_character_, NA must not be included in the level of factors specified in .margins or .with_all.\ng2 includes NA in the level of factor. Try setting .margin_name to NA_character_ and using g2.\n\ndf1 |&gt;\n  summarise_with_margins(\n    n = n(),\n    value = mean(value, na.rm = TRUE),\n    .with_all = g2,\n    .margin_name = NA_character_\n  )\n\nError in with_margins(.data = .data, ..., .margins = {: If `.margin_name` is a `NA_character_`, the following factor columns specified in `.margins` or `.with_all` must not contain &lt;NA&gt; in the level: `g2`\n\n\nThe reasons for the errors are as follows:\nA value whose level is NA is not itself NA.\n\nx &lt;- factor(NA, exclude = NULL)\n\nx\n\n[1] &lt;NA&gt;\nLevels: &lt;NA&gt;\n\nis.na(x)\n\n[1] FALSE\n\n\nHowever, if NA_character_ is specified as .margin_name, this is because when NA_character_ is converted to factor, it will be the same as the value where the level of the original data is NA and they cannot be distinguished.",
    "crumbs": [
      "Articles",
      "Grouped operations with margins"
    ]
  },
  {
    "objectID": "vignettes/grouped_operations_with_margins.html#union_all_with_margins",
    "href": "vignettes/grouped_operations_with_margins.html#union_all_with_margins",
    "title": "Grouped operations with margins",
    "section": "2 union_all_with_margins()",
    "text": "2 union_all_with_margins()\n\n2.1 Usage\nunion_all_with_margins() considers each margin as a new category, duplicate the rows and merge them vertically (like UNION ALL in SQL).\n\n\n\n\n\n\nThe number of rows in the result of union_all_with_margins() can be huge.\n\n\n\nBe aware that this may increase memory occupancy and overload the server.\n\n\n\ndf1 |&gt;\n  union_all_with_margins(\n    .margins = c(cat, subcat)\n  ) |&gt; \n  print(n = Inf)\n\n# A tibble: 24 × 7\n   cat   subcat  year    g1 g2    id    value\n   &lt;fct&gt; &lt;ord&gt;  &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt;\n 1 (all) (all)   2020     1 y     1         5\n 2 (all) (all)   2020     2 x     2        NA\n 3 (all) (all)   2020     2 x     3         1\n 4 (all) (all)   2020     1 x     4         8\n 5 (all) (all)   2021    NA x     1         4\n 6 (all) (all)   2021     1 y     2         7\n 7 (all) (all)   2021     1 &lt;NA&gt;  3         3\n 8 (all) (all)   2021     2 y     4         9\n 9 A     (all)   2020     1 y     1         5\n10 A     (all)   2020     2 x     2        NA\n11 B     (all)   2020     2 x     3         1\n12 B     (all)   2020     1 x     4         8\n13 A     (all)   2021    NA x     1         4\n14 A     (all)   2021     1 y     2         7\n15 B     (all)   2021     1 &lt;NA&gt;  3         3\n16 B     (all)   2021     2 y     4         9\n17 A     a1      2020     1 y     1         5\n18 A     a2      2020     2 x     2        NA\n19 B     &lt;NA&gt;    2020     2 x     3         1\n20 B     b2      2020     1 x     4         8\n21 A     a1      2021    NA x     1         4\n22 A     a2      2021     1 y     2         7\n23 B     b1      2021     1 &lt;NA&gt;  3         3\n24 B     b2      2021     2 y     4         9\n\n\nThe following margins were considered as a new category and merged vertically three times.\n\ncat and subcat margins\nsubcat margins\nWithout margins\n\nThe original df1 has 8 rows. Thus the number of rows became 8 * 3 = 24 rows.",
    "crumbs": [
      "Articles",
      "Grouped operations with margins"
    ]
  },
  {
    "objectID": "vignettes/grouped_operations_with_margins.html#nest_with_margins-and-nest_by_with_margins",
    "href": "vignettes/grouped_operations_with_margins.html#nest_with_margins-and-nest_by_with_margins",
    "title": "Grouped operations with margins",
    "section": "3 nest_with_margins() and nest_by_with_margins()",
    "text": "3 nest_with_margins() and nest_by_with_margins()\n\n\n\n\n\n\nOnly works with a local data frame\n\n\n\nnest_with_margins() and nest_by_with_margins() only works with a local data frame, as most lazy tables do not support nest operations.\n\n\n\n3.1 Usage\nnest_with_magins() and nest_by_with_magins() have similar behaviour. Each function nests for each group.\n\nnest_with_magins() returns an ungrouped data frame, like tidyr::nest().\nnest_by_with_magins() returns a row-wise data frame, like dplyr::nest_by().\n\n\ndf1 |&gt;\n  nest_with_margins(\n    .margins = c(cat, subcat)\n  )\n\n# A tibble: 8 × 3\n  cat   subcat data            \n  &lt;fct&gt; &lt;ord&gt;  &lt;list&gt;          \n1 (all) (all)  &lt;tibble [8 × 5]&gt;\n2 A     (all)  &lt;tibble [4 × 5]&gt;\n3 A     a1     &lt;tibble [2 × 5]&gt;\n4 A     a2     &lt;tibble [2 × 5]&gt;\n5 B     (all)  &lt;tibble [4 × 5]&gt;\n6 B     b1     &lt;tibble [1 × 5]&gt;\n7 B     b2     &lt;tibble [2 × 5]&gt;\n8 B     &lt;NA&gt;   &lt;tibble [1 × 5]&gt;\n\n\n\ndf1 |&gt;\n  nest_by_with_margins(\n    .margins = c(cat, subcat)\n  )\n\n# A tibble: 8 × 3\n# Rowwise:  cat, subcat\n  cat   subcat               data\n  &lt;fct&gt; &lt;ord&gt;  &lt;list&lt;tibble[,5]&gt;&gt;\n1 (all) (all)             [8 × 5]\n2 A     (all)             [4 × 5]\n3 A     a1                [2 × 5]\n4 A     a2                [2 × 5]\n5 B     (all)             [4 × 5]\n6 B     b1                [1 × 5]\n7 B     b2                [2 × 5]\n8 B     &lt;NA&gt;              [1 × 5]\n\n\nThe data contained in each group is nested in the data column. This allows the same operation to be performed on each nested group at a time. See the followings for more information.\n\nNested data - {tidyr} vignette\nbroom and dplyr - {broom} vignette\nRow-wise operations - {dplyr} vignette\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSession Info\n\n\nsessionInfo()\n\nR version 4.4.3 (2025-02-28)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.12.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.4     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 swm_0.1.0      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.9.1    compiler_4.4.3    tidyselect_1.2.1 \n [5] bspm_0.5.7        scales_1.3.0      yaml_2.3.10       fastmap_1.2.0    \n [9] R6_2.6.1          generics_0.1.3    knitr_1.49        munsell_0.5.1    \n[13] pillar_1.10.1     tzdb_0.4.0        rlang_1.1.5       utf8_1.2.4       \n[17] stringi_1.8.4     xfun_0.51         timechange_0.3.0  cli_3.6.4        \n[21] withr_3.0.2       magrittr_2.0.3    digest_0.6.37     grid_4.4.3       \n[25] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.3   \n[29] glue_1.8.0        colorspace_2.1-1  rmarkdown_2.29    tools_4.4.3      \n[33] pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "Articles",
      "Grouped operations with margins"
    ]
  },
  {
    "objectID": "NEWS.html",
    "href": "NEWS.html",
    "title": "swm 0.1.0",
    "section": "",
    "text": "swm 0.1.0\n\nInitial CRAN submission.",
    "crumbs": [
      "News"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html",
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at sayuks.dev@gmail.com. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by [Mozilla’s code of conduct enforcement ladder][https://github.com/mozilla/inclusion].\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-pledge",
    "href": "CODE_OF_CONDUCT.html#our-pledge",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-standards",
    "href": "CODE_OF_CONDUCT.html#our-standards",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "href": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#scope",
    "href": "CODE_OF_CONDUCT.html#scope",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement",
    "href": "CODE_OF_CONDUCT.html#enforcement",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at sayuks.dev@gmail.com. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "href": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#attribution",
    "href": "CODE_OF_CONDUCT.html#attribution",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by [Mozilla’s code of conduct enforcement ladder][https://github.com/mozilla/inclusion].\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Code of conduct"
    ]
  },
  {
    "objectID": "CITATION.html",
    "href": "CITATION.html",
    "title": "Citation",
    "section": "",
    "text": "Citation\nTo cite package ‘swm’ in publications use:\n\nSasaki Y (????). swm: What the Package Does (One Line, Title Case). R package version 0.1.0, https://github.com/sayuks/swm, https://sayuks.github.io/swm/.",
    "crumbs": [
      "Citation"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "swm",
    "section": "",
    "text": "The goal of swm is to …\n\n\nYou can install the development version of swm from GitHub with:\n# install.packages(\"pak\")\npak::pak(\"sayuks/swm\")\n\n\n\n\n\n\nPlease note that the swm project is released with a Contributor Code of Conduct. By contributing to this project, you agree to abide by its terms.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "swm",
    "section": "",
    "text": "You can install the development version of swm from GitHub with:\n# install.packages(\"pak\")\npak::pak(\"sayuks/swm\")",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "swm",
    "section": "",
    "text": "Please note that the swm project is released with a Contributor Code of Conduct. By contributing to this project, you agree to abide by its terms.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2025 swm authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "man/summarise_with_margins.html",
    "href": "man/summarise_with_margins.html",
    "title": "swm",
    "section": "",
    "text": "See below for more details\n\n\nhttp://10.13.123.231:3838/team_package/demo/grouped_operations_with_margins.html\n\n\n\n\n\nsummarise_with_margins(\n  .data,\n  ...,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = is.data.frame(.data)\n)\n\nunion_all_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = FALSE\n)\n\nnest_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = TRUE,\n  .key = NULL,\n  .names_sep = NULL\n)\n\nnest_by_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = TRUE,\n  .key = \"data\",\n  .keep = FALSE\n)\n\n\n\n\n\n\n\n.data\n\n\n\n\nFor summarise_with_margins() and union_all_with_margins() : a data frame or lazy table.\n\n\nLazy tables created by {arrow} does not work. If you want to work with it, it is an easy way to convert to a duckdb back-end using arrow::to_duckdb() in advance.\n\n\n\n\nFor nest_with_margins() and nest_by_with_margins(): a data frame (not lazy table).\n\n\n\n\n\n\n…\n\n\nName-value pairs as used in dplyr::summarise().\n\n\n\n\n.margins\n\n\n&lt;tidy-select&gt; Grouping columns which margins are calculated, starting from the highest parent of the hierarchy.\n\n\n\n\n.without_all\n\n\n&lt;tidy-select&gt; Additional group variables without hierarchy to which .margin_name will NOT be added.\n\n\n\n\n.with_all\n\n\n&lt;tidy-select&gt; Additional group variables without hierarchy to which .margin_name will be added.\n\n\n\n\n.margin_name\n\n\nA string representing margin name (Defaults to “(all)”). NA_character_ is also allowed.\n\n\n\n\n.sort\n\n\nA Logical. If TRUE, sort the result by the column order specified in .without_all and .margins and .with_all.\n\n\nsummarise_with_margins() defaults to is.data.frame(.data), union_all_with_margins() defaults to FALSE.\n\n\nThis is because pipelines using lazy tables should perform the SQL ORDER BY as last as possible.\n\n\nAs a result of sorting, in the case of lazy tables, NA may come first, unlike R.\n\n\nSee arrange() documentation of {dbplyr} for details.\n\n\n\n\nnest_with_margins() and nest_by_with_margins() default to TRUE.\n\n\n\n\n\n\n.key\n\n\nThe name of the resulting nested column.\n\n\nFor nest_with_margins(), passed to .key argument of tidyr::nest()\n\n\nFor nest_by_with_margins(), passed to .key argument of dplyr::nest_by()\n\n\n\n\n\n\n.names_sep\n\n\nPassed to .names_sep argument of tidyr::nest().\n\n\n\n\n.keep\n\n\nShould the grouping columns be kept in the list column. Passed to .keep argument of dplyr::nest_by().\n\n\n\n\n\n\nsummarise_with_margins()\n\n\nThis is similar to dplyr::summarise() but creates an additional .margin_name category for each grouping variable. It assumes a hierarchy of groups and the higher level groups should be provided first.\n\n\nRegular groups, not used for totals/subtotals can be provided through the .without_all argument and will be used as parent groups.\n\n\nIf you want to create its own total margin (such as “(all)”) for a variable that is a regular group and has no hierarchy, specify it with .with_all. If there is more than one .with_all, all combinations of them are generated.\n\n\nunion_all_with_margins()\n\n\nConsider each margin as a new category, duplicate the rows and merge them vertically (like UNION ALL in SQL).\n\n\nThe use of arguments in common with summarise_with_margins() is the same as for it.\n\n\nBe aware that the number of rows can be huge.\n\n\nnest_with_margins()\n\n\nRun like tidyr::nest(&lt;data&gt;, .by = c({{ .without_all }} , {{ .margins }} , {{ .with_all }})) on the result of union_all_with_margins().\n\n\nOnly works for a local data frame.\n\n\nnest_by_with_margins()\n\n\nRun like dplyr::nest_by(&lt;data&gt;, dplyr::pick({{ .without_all }} , {{ .margins }} , {{ .with_all }}) on the result of union_all_with_margins(). The result is a row-wise data frame grouped by row.\n\n\nOnly works for a local data frame.\n\n\n\n\n\nA data frame. If .data is a lazy table, the output is also a lazy table.\n\n\nMissing values are kept as missing.\n\n\nThe order of the columns is as follows from left to right: .without_all, .margins, .with_all and the remaining columns.\n\n\nColumn types specified with .margins or .with_all:\n\n\nColumns that are not originally factor or character (e.g. numeric, integer, logical) are converted to characters. This is required to add the .margin_name category.\n\n\nOriginally the factor column (assuming a local data frame):\n\n\nRemains as factor. (If ordered, remains as ordered).\n\n\nThe level of the factor depends on the case:\n\n\nIf .margin_name is NOT a NA_character (such as “(all)”):\n\n\n.margin_name is added to the beginning of the level of the factor.\n\n\n\n\nIf .margin_name is a NA_character:\n\n\nIf the column has &lt;NA&gt; in the level:\n\n\nError occurs. Because, although the values with level &lt;NA&gt; are not equal to NA_character_, they will be identical and indistinguishable when merging NA_character_ as a new category.\n\n\n\n\nIf the column does not have &lt;NA&gt; in the level:\n\n\nJust keeps the original level of factor. &lt;NA&gt; is not included in the level. This is consistent with the default base::factor() behavior (exclude = NA).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMain idea is borrowed from here.\n\n\n\n\n\n\nlibrary(\"swm\")\n\n# Make a hierarchical margin for `cyl`, `vs`.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n)\n\n    cyl    vs  n      mpg\n1 (all) (all) 32 20.09062\n2     4 (all) 11 26.66364\n3     4     0  1 26.00000\n4     4     1 10 26.73000\n5     6 (all)  7 19.74286\n6     6     0  3 20.56667\n7     6     1  4 19.12500\n8     8 (all) 14 15.10000\n9     8     0 14 15.10000\n\n# `am` does not create a hierarchy, but is an overall group variable.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am\n)\n\n   am   cyl    vs  n      mpg\n1   0 (all) (all) 19 17.14737\n2   0     4 (all)  3 22.90000\n3   0     4     1  3 22.90000\n4   0     6 (all)  4 19.12500\n5   0     6     1  4 19.12500\n6   0     8 (all) 12 15.05000\n7   0     8     0 12 15.05000\n8   1 (all) (all) 13 24.39231\n9   1     4 (all)  8 28.07500\n10  1     4     0  1 26.00000\n11  1     4     1  7 28.37143\n12  1     6 (all)  3 20.56667\n13  1     6     0  3 20.56667\n14  1     8 (all)  2 15.40000\n15  1     8     0  2 15.40000\n\n# `gear` creates \"(all)\" margins on itself.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n   am   cyl    vs  gear  n      mpg\n1   0 (all) (all) (all) 19 17.14737\n2   0 (all) (all)     3 15 16.10667\n3   0 (all) (all)     4  4 21.05000\n4   0     4 (all) (all)  3 22.90000\n5   0     4 (all)     3  1 21.50000\n6   0     4 (all)     4  2 23.60000\n7   0     4     1 (all)  3 22.90000\n8   0     4     1     3  1 21.50000\n9   0     4     1     4  2 23.60000\n10  0     6 (all) (all)  4 19.12500\n11  0     6 (all)     3  2 19.75000\n12  0     6 (all)     4  2 18.50000\n13  0     6     1 (all)  4 19.12500\n14  0     6     1     3  2 19.75000\n15  0     6     1     4  2 18.50000\n16  0     8 (all) (all) 12 15.05000\n17  0     8 (all)     3 12 15.05000\n18  0     8     0 (all) 12 15.05000\n19  0     8     0     3 12 15.05000\n20  1 (all) (all) (all) 13 24.39231\n21  1 (all) (all)     4  8 26.27500\n22  1 (all) (all)     5  5 21.38000\n23  1     4 (all) (all)  8 28.07500\n24  1     4 (all)     4  6 28.03333\n25  1     4 (all)     5  2 28.20000\n26  1     4     0 (all)  1 26.00000\n27  1     4     0     5  1 26.00000\n28  1     4     1 (all)  7 28.37143\n29  1     4     1     4  6 28.03333\n30  1     4     1     5  1 30.40000\n31  1     6 (all) (all)  3 20.56667\n32  1     6 (all)     4  2 21.00000\n33  1     6 (all)     5  1 19.70000\n34  1     6     0 (all)  3 20.56667\n35  1     6     0     4  2 21.00000\n36  1     6     0     5  1 19.70000\n37  1     8 (all) (all)  2 15.40000\n38  1     8 (all)     5  2 15.40000\n39  1     8     0 (all)  2 15.40000\n40  1     8     0     5  2 15.40000\n\n# If `.with_all` has multiple columns, all combinations are generated.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = c(gear, carb)\n)\n\n    am   cyl    vs  gear  carb  n      mpg\n1    0 (all) (all) (all) (all) 19 17.14737\n2    0 (all) (all) (all)     1  3 20.33333\n3    0 (all) (all) (all)     2  6 19.30000\n4    0 (all) (all) (all)     3  3 16.30000\n5    0 (all) (all) (all)     4  7 14.30000\n6    0 (all) (all)     3 (all) 15 16.10667\n7    0 (all) (all)     3     1  3 20.33333\n8    0 (all) (all)     3     2  4 17.15000\n9    0 (all) (all)     3     3  3 16.30000\n10   0 (all) (all)     3     4  5 12.62000\n11   0 (all) (all)     4 (all)  4 21.05000\n12   0 (all) (all)     4     2  2 23.60000\n13   0 (all) (all)     4     4  2 18.50000\n14   0     4 (all) (all) (all)  3 22.90000\n15   0     4 (all) (all)     1  1 21.50000\n16   0     4 (all) (all)     2  2 23.60000\n17   0     4 (all)     3 (all)  1 21.50000\n18   0     4 (all)     3     1  1 21.50000\n19   0     4 (all)     4 (all)  2 23.60000\n20   0     4 (all)     4     2  2 23.60000\n21   0     4     1 (all) (all)  3 22.90000\n22   0     4     1 (all)     1  1 21.50000\n23   0     4     1 (all)     2  2 23.60000\n24   0     4     1     3 (all)  1 21.50000\n25   0     4     1     3     1  1 21.50000\n26   0     4     1     4 (all)  2 23.60000\n27   0     4     1     4     2  2 23.60000\n28   0     6 (all) (all) (all)  4 19.12500\n29   0     6 (all) (all)     1  2 19.75000\n30   0     6 (all) (all)     4  2 18.50000\n31   0     6 (all)     3 (all)  2 19.75000\n32   0     6 (all)     3     1  2 19.75000\n33   0     6 (all)     4 (all)  2 18.50000\n34   0     6 (all)     4     4  2 18.50000\n35   0     6     1 (all) (all)  4 19.12500\n36   0     6     1 (all)     1  2 19.75000\n37   0     6     1 (all)     4  2 18.50000\n38   0     6     1     3 (all)  2 19.75000\n39   0     6     1     3     1  2 19.75000\n40   0     6     1     4 (all)  2 18.50000\n41   0     6     1     4     4  2 18.50000\n42   0     8 (all) (all) (all) 12 15.05000\n43   0     8 (all) (all)     2  4 17.15000\n44   0     8 (all) (all)     3  3 16.30000\n45   0     8 (all) (all)     4  5 12.62000\n46   0     8 (all)     3 (all) 12 15.05000\n47   0     8 (all)     3     2  4 17.15000\n48   0     8 (all)     3     3  3 16.30000\n49   0     8 (all)     3     4  5 12.62000\n50   0     8     0 (all) (all) 12 15.05000\n51   0     8     0 (all)     2  4 17.15000\n52   0     8     0 (all)     3  3 16.30000\n53   0     8     0 (all)     4  5 12.62000\n54   0     8     0     3 (all) 12 15.05000\n55   0     8     0     3     2  4 17.15000\n56   0     8     0     3     3  3 16.30000\n57   0     8     0     3     4  5 12.62000\n58   1 (all) (all) (all) (all) 13 24.39231\n59   1 (all) (all) (all)     1  4 29.10000\n60   1 (all) (all) (all)     2  4 27.05000\n61   1 (all) (all) (all)     4  3 19.26667\n62   1 (all) (all) (all)     6  1 19.70000\n63   1 (all) (all) (all)     8  1 15.00000\n64   1 (all) (all)     4 (all)  8 26.27500\n65   1 (all) (all)     4     1  4 29.10000\n66   1 (all) (all)     4     2  2 25.90000\n67   1 (all) (all)     4     4  2 21.00000\n68   1 (all) (all)     5 (all)  5 21.38000\n69   1 (all) (all)     5     2  2 28.20000\n70   1 (all) (all)     5     4  1 15.80000\n71   1 (all) (all)     5     6  1 19.70000\n72   1 (all) (all)     5     8  1 15.00000\n73   1     4 (all) (all) (all)  8 28.07500\n74   1     4 (all) (all)     1  4 29.10000\n75   1     4 (all) (all)     2  4 27.05000\n76   1     4 (all)     4 (all)  6 28.03333\n77   1     4 (all)     4     1  4 29.10000\n78   1     4 (all)     4     2  2 25.90000\n79   1     4 (all)     5 (all)  2 28.20000\n80   1     4 (all)     5     2  2 28.20000\n81   1     4     0 (all) (all)  1 26.00000\n82   1     4     0 (all)     2  1 26.00000\n83   1     4     0     5 (all)  1 26.00000\n84   1     4     0     5     2  1 26.00000\n85   1     4     1 (all) (all)  7 28.37143\n86   1     4     1 (all)     1  4 29.10000\n87   1     4     1 (all)     2  3 27.40000\n88   1     4     1     4 (all)  6 28.03333\n89   1     4     1     4     1  4 29.10000\n90   1     4     1     4     2  2 25.90000\n91   1     4     1     5 (all)  1 30.40000\n92   1     4     1     5     2  1 30.40000\n93   1     6 (all) (all) (all)  3 20.56667\n94   1     6 (all) (all)     4  2 21.00000\n95   1     6 (all) (all)     6  1 19.70000\n96   1     6 (all)     4 (all)  2 21.00000\n97   1     6 (all)     4     4  2 21.00000\n98   1     6 (all)     5 (all)  1 19.70000\n99   1     6 (all)     5     6  1 19.70000\n100  1     6     0 (all) (all)  3 20.56667\n101  1     6     0 (all)     4  2 21.00000\n102  1     6     0 (all)     6  1 19.70000\n103  1     6     0     4 (all)  2 21.00000\n104  1     6     0     4     4  2 21.00000\n105  1     6     0     5 (all)  1 19.70000\n106  1     6     0     5     6  1 19.70000\n107  1     8 (all) (all) (all)  2 15.40000\n108  1     8 (all) (all)     4  1 15.80000\n109  1     8 (all) (all)     8  1 15.00000\n110  1     8 (all)     5 (all)  2 15.40000\n111  1     8 (all)     5     4  1 15.80000\n112  1     8 (all)     5     8  1 15.00000\n113  1     8     0 (all) (all)  2 15.40000\n114  1     8     0 (all)     4  1 15.80000\n115  1     8     0 (all)     8  1 15.00000\n116  1     8     0     5 (all)  2 15.40000\n117  1     8     0     5     4  1 15.80000\n118  1     8     0     5     8  1 15.00000\n\n# union_all_with_margins()\nunion_all_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n                          am   cyl    vs  gear  mpg  disp  hp drat    wt  qsec\nMazda RX4...1              1 (all) (all) (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...2          1 (all) (all) (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...3             1 (all) (all) (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...4         0 (all) (all) (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...5      0 (all) (all) (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...6                0 (all) (all) (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...7             0 (all) (all) (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...8              0 (all) (all) (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...9               0 (all) (all) (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...10              0 (all) (all) (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...11             0 (all) (all) (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...12            0 (all) (all) (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...13            0 (all) (all) (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...14           0 (all) (all) (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...15    0 (all) (all) (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...16   0 (all) (all) (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...17     0 (all) (all) (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...18              1 (all) (all) (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...19           1 (all) (all) (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...20        1 (all) (all) (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...21         0 (all) (all) (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...22      0 (all) (all) (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...23           0 (all) (all) (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...24            0 (all) (all) (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...25      0 (all) (all) (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...26             1 (all) (all) (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...27         1 (all) (all) (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...28          1 (all) (all) (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...29        1 (all) (all) (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...30          1 (all) (all) (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...31         1 (all) (all) (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...32            1 (all) (all) (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...33             1 (all) (all)     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...34         1 (all) (all)     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...35            1 (all) (all)     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...36        0 (all) (all)     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...37     0 (all) (all)     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...38               0 (all) (all)     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...39            0 (all) (all)     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...40             0 (all) (all)     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...41              0 (all) (all)     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...42              0 (all) (all)     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...43             0 (all) (all)     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...44            0 (all) (all)     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...45            0 (all) (all)     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...46           0 (all) (all)     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...47    0 (all) (all)     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...48   0 (all) (all)     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...49     0 (all) (all)     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...50              1 (all) (all)     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...51           1 (all) (all)     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...52        1 (all) (all)     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...53         0 (all) (all)     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...54      0 (all) (all)     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...55           0 (all) (all)     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...56            0 (all) (all)     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...57      0 (all) (all)     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...58             1 (all) (all)     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...59         1 (all) (all)     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...60          1 (all) (all)     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...61        1 (all) (all)     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...62          1 (all) (all)     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...63         1 (all) (all)     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...64            1 (all) (all)     4 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...65             1     6 (all) (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...66         1     6 (all) (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...67            1     4 (all) (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...68        0     6 (all) (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...69     0     8 (all) (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...70               0     6 (all) (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...71            0     8 (all) (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...72             0     4 (all) (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...73              0     4 (all) (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...74              0     6 (all) (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...75             0     6 (all) (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...76            0     8 (all) (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...77            0     8 (all) (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...78           0     8 (all) (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...79    0     8 (all) (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...80   0     8 (all) (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...81     0     8 (all) (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...82              1     4 (all) (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...83           1     4 (all) (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...84        1     4 (all) (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...85         0     4 (all) (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...86      0     8 (all) (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...87           0     8 (all) (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...88            0     8 (all) (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...89      0     8 (all) (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...90             1     4 (all) (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...91         1     4 (all) (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...92          1     4 (all) (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...93        1     8 (all) (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...94          1     6 (all) (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...95         1     8 (all) (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...96            1     4 (all) (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...97             1     6 (all)     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...98         1     6 (all)     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...99            1     4 (all)     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...100       0     6 (all)     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...101    0     8 (all)     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...102              0     6 (all)     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...103           0     8 (all)     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...104            0     4 (all)     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...105             0     4 (all)     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...106             0     6 (all)     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...107            0     6 (all)     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...108           0     8 (all)     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...109           0     8 (all)     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...110          0     8 (all)     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...111   0     8 (all)     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...112  0     8 (all)     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...113    0     8 (all)     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...114             1     4 (all)     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...115          1     4 (all)     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...116       1     4 (all)     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...117        0     4 (all)     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...118     0     8 (all)     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...119          0     8 (all)     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...120           0     8 (all)     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...121     0     8 (all)     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...122            1     4 (all)     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...123        1     4 (all)     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...124         1     4 (all)     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...125       1     8 (all)     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...126         1     6 (all)     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...127        1     8 (all)     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...128           1     4 (all)     4 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...129            1     6     0 (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...130        1     6     0 (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...131           1     4     1 (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...132       0     6     1 (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...133    0     8     0 (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...134              0     6     1 (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...135           0     8     0 (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...136            0     4     1 (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...137             0     4     1 (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...138             0     6     1 (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...139            0     6     1 (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...140           0     8     0 (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...141           0     8     0 (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...142          0     8     0 (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...143   0     8     0 (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...144  0     8     0 (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...145    0     8     0 (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...146             1     4     1 (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...147          1     4     1 (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...148       1     4     1 (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...149        0     4     1 (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...150     0     8     0 (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...151          0     8     0 (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...152           0     8     0 (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...153     0     8     0 (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...154            1     4     1 (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...155        1     4     0 (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...156         1     4     1 (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...157       1     8     0 (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...158         1     6     0 (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...159        1     8     0 (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...160           1     4     1 (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...161            1     6     0     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...162        1     6     0     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...163           1     4     1     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...164       0     6     1     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...165    0     8     0     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...166              0     6     1     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...167           0     8     0     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...168            0     4     1     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...169             0     4     1     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...170             0     6     1     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...171            0     6     1     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...172           0     8     0     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...173           0     8     0     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...174          0     8     0     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...175   0     8     0     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...176  0     8     0     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...177    0     8     0     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...178             1     4     1     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...179          1     4     1     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...180       1     4     1     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...181        0     4     1     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...182     0     8     0     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...183          0     8     0     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...184           0     8     0     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...185     0     8     0     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...186            1     4     1     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...187        1     4     0     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...188         1     4     1     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...189       1     8     0     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...190         1     6     0     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...191        1     8     0     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...192           1     4     1     4 21.4 121.0 109 4.11 2.780 18.60\n                          carb\nMazda RX4...1                4\nMazda RX4 Wag...2            4\nDatsun 710...3               1\nHornet 4 Drive...4           1\nHornet Sportabout...5        2\nValiant...6                  1\nDuster 360...7               4\nMerc 240D...8                2\nMerc 230...9                 2\nMerc 280...10                4\nMerc 280C...11               4\nMerc 450SE...12              3\nMerc 450SL...13              3\nMerc 450SLC...14             3\nCadillac Fleetwood...15      4\nLincoln Continental...16     4\nChrysler Imperial...17       4\nFiat 128...18                1\nHonda Civic...19             2\nToyota Corolla...20          1\nToyota Corona...21           1\nDodge Challenger...22        2\nAMC Javelin...23             2\nCamaro Z28...24              4\nPontiac Firebird...25        2\nFiat X1-9...26               1\nPorsche 914-2...27           2\nLotus Europa...28            2\nFord Pantera L...29          4\nFerrari Dino...30            6\nMaserati Bora...31           8\nVolvo 142E...32              2\nMazda RX4...33               4\nMazda RX4 Wag...34           4\nDatsun 710...35              1\nHornet 4 Drive...36          1\nHornet Sportabout...37       2\nValiant...38                 1\nDuster 360...39              4\nMerc 240D...40               2\nMerc 230...41                2\nMerc 280...42                4\nMerc 280C...43               4\nMerc 450SE...44              3\nMerc 450SL...45              3\nMerc 450SLC...46             3\nCadillac Fleetwood...47      4\nLincoln Continental...48     4\nChrysler Imperial...49       4\nFiat 128...50                1\nHonda Civic...51             2\nToyota Corolla...52          1\nToyota Corona...53           1\nDodge Challenger...54        2\nAMC Javelin...55             2\nCamaro Z28...56              4\nPontiac Firebird...57        2\nFiat X1-9...58               1\nPorsche 914-2...59           2\nLotus Europa...60            2\nFord Pantera L...61          4\nFerrari Dino...62            6\nMaserati Bora...63           8\nVolvo 142E...64              2\nMazda RX4...65               4\nMazda RX4 Wag...66           4\nDatsun 710...67              1\nHornet 4 Drive...68          1\nHornet Sportabout...69       2\nValiant...70                 1\nDuster 360...71              4\nMerc 240D...72               2\nMerc 230...73                2\nMerc 280...74                4\nMerc 280C...75               4\nMerc 450SE...76              3\nMerc 450SL...77              3\nMerc 450SLC...78             3\nCadillac Fleetwood...79      4\nLincoln Continental...80     4\nChrysler Imperial...81       4\nFiat 128...82                1\nHonda Civic...83             2\nToyota Corolla...84          1\nToyota Corona...85           1\nDodge Challenger...86        2\nAMC Javelin...87             2\nCamaro Z28...88              4\nPontiac Firebird...89        2\nFiat X1-9...90               1\nPorsche 914-2...91           2\nLotus Europa...92            2\nFord Pantera L...93          4\nFerrari Dino...94            6\nMaserati Bora...95           8\nVolvo 142E...96              2\nMazda RX4...97               4\nMazda RX4 Wag...98           4\nDatsun 710...99              1\nHornet 4 Drive...100         1\nHornet Sportabout...101      2\nValiant...102                1\nDuster 360...103             4\nMerc 240D...104              2\nMerc 230...105               2\nMerc 280...106               4\nMerc 280C...107              4\nMerc 450SE...108             3\nMerc 450SL...109             3\nMerc 450SLC...110            3\nCadillac Fleetwood...111     4\nLincoln Continental...112    4\nChrysler Imperial...113      4\nFiat 128...114               1\nHonda Civic...115            2\nToyota Corolla...116         1\nToyota Corona...117          1\nDodge Challenger...118       2\nAMC Javelin...119            2\nCamaro Z28...120             4\nPontiac Firebird...121       2\nFiat X1-9...122              1\nPorsche 914-2...123          2\nLotus Europa...124           2\nFord Pantera L...125         4\nFerrari Dino...126           6\nMaserati Bora...127          8\nVolvo 142E...128             2\nMazda RX4...129              4\nMazda RX4 Wag...130          4\nDatsun 710...131             1\nHornet 4 Drive...132         1\nHornet Sportabout...133      2\nValiant...134                1\nDuster 360...135             4\nMerc 240D...136              2\nMerc 230...137               2\nMerc 280...138               4\nMerc 280C...139              4\nMerc 450SE...140             3\nMerc 450SL...141             3\nMerc 450SLC...142            3\nCadillac Fleetwood...143     4\nLincoln Continental...144    4\nChrysler Imperial...145      4\nFiat 128...146               1\nHonda Civic...147            2\nToyota Corolla...148         1\nToyota Corona...149          1\nDodge Challenger...150       2\nAMC Javelin...151            2\nCamaro Z28...152             4\nPontiac Firebird...153       2\nFiat X1-9...154              1\nPorsche 914-2...155          2\nLotus Europa...156           2\nFord Pantera L...157         4\nFerrari Dino...158           6\nMaserati Bora...159          8\nVolvo 142E...160             2\nMazda RX4...161              4\nMazda RX4 Wag...162          4\nDatsun 710...163             1\nHornet 4 Drive...164         1\nHornet Sportabout...165      2\nValiant...166                1\nDuster 360...167             4\nMerc 240D...168              2\nMerc 230...169               2\nMerc 280...170               4\nMerc 280C...171              4\nMerc 450SE...172             3\nMerc 450SL...173             3\nMerc 450SLC...174            3\nCadillac Fleetwood...175     4\nLincoln Continental...176    4\nChrysler Imperial...177      4\nFiat 128...178               1\nHonda Civic...179            2\nToyota Corolla...180         1\nToyota Corona...181          1\nDodge Challenger...182       2\nAMC Javelin...183            2\nCamaro Z28...184             4\nPontiac Firebird...185       2\nFiat X1-9...186              1\nPorsche 914-2...187          2\nLotus Europa...188           2\nFord Pantera L...189         4\nFerrari Dino...190           6\nMaserati Bora...191          8\nVolvo 142E...192             2\n\n# nest_with_margins()\nnest_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n# A tibble: 40 × 5\n      am cyl   vs    gear  data             \n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&gt;           \n 1     0 (all) (all) (all) &lt;tibble [19 × 7]&gt;\n 2     0 (all) (all) 3     &lt;tibble [15 × 7]&gt;\n 3     0 (all) (all) 4     &lt;tibble [4 × 7]&gt; \n 4     0 4     (all) (all) &lt;tibble [3 × 7]&gt; \n 5     0 4     (all) 3     &lt;tibble [1 × 7]&gt; \n 6     0 4     (all) 4     &lt;tibble [2 × 7]&gt; \n 7     0 4     1     (all) &lt;tibble [3 × 7]&gt; \n 8     0 4     1     3     &lt;tibble [1 × 7]&gt; \n 9     0 4     1     4     &lt;tibble [2 × 7]&gt; \n10     0 6     (all) (all) &lt;tibble [4 × 7]&gt; \n# ℹ 30 more rows\n\n#' nest_by_with_margins()\nnest_by_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n# A tibble: 40 × 5\n# Rowwise:  am, cyl, vs, gear\n      am cyl   vs    gear                data\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&lt;tibble[,7]&gt;&gt;\n 1     0 (all) (all) (all)           [19 × 7]\n 2     0 (all) (all) 3               [15 × 7]\n 3     0 (all) (all) 4                [4 × 7]\n 4     0 4     (all) (all)            [3 × 7]\n 5     0 4     (all) 3                [1 × 7]\n 6     0 4     (all) 4                [2 × 7]\n 7     0 4     1     (all)            [3 × 7]\n 8     0 4     1     3                [1 × 7]\n 9     0 4     1     4                [2 × 7]\n10     0 6     (all) (all)            [4 × 7]\n# ℹ 30 more rows",
    "crumbs": [
      "Reference",
      "summarise_with_margins"
    ]
  },
  {
    "objectID": "man/summarise_with_margins.html#grouped-operations-with-margins",
    "href": "man/summarise_with_margins.html#grouped-operations-with-margins",
    "title": "swm",
    "section": "",
    "text": "See below for more details\n\n\nhttp://10.13.123.231:3838/team_package/demo/grouped_operations_with_margins.html\n\n\n\n\n\nsummarise_with_margins(\n  .data,\n  ...,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = is.data.frame(.data)\n)\n\nunion_all_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = FALSE\n)\n\nnest_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = TRUE,\n  .key = NULL,\n  .names_sep = NULL\n)\n\nnest_by_with_margins(\n  .data,\n  .margins = NULL,\n  .without_all = NULL,\n  .with_all = NULL,\n  .margin_name = \"(all)\",\n  .sort = TRUE,\n  .key = \"data\",\n  .keep = FALSE\n)\n\n\n\n\n\n\n\n.data\n\n\n\n\nFor summarise_with_margins() and union_all_with_margins() : a data frame or lazy table.\n\n\nLazy tables created by {arrow} does not work. If you want to work with it, it is an easy way to convert to a duckdb back-end using arrow::to_duckdb() in advance.\n\n\n\n\nFor nest_with_margins() and nest_by_with_margins(): a data frame (not lazy table).\n\n\n\n\n\n\n…\n\n\nName-value pairs as used in dplyr::summarise().\n\n\n\n\n.margins\n\n\n&lt;tidy-select&gt; Grouping columns which margins are calculated, starting from the highest parent of the hierarchy.\n\n\n\n\n.without_all\n\n\n&lt;tidy-select&gt; Additional group variables without hierarchy to which .margin_name will NOT be added.\n\n\n\n\n.with_all\n\n\n&lt;tidy-select&gt; Additional group variables without hierarchy to which .margin_name will be added.\n\n\n\n\n.margin_name\n\n\nA string representing margin name (Defaults to “(all)”). NA_character_ is also allowed.\n\n\n\n\n.sort\n\n\nA Logical. If TRUE, sort the result by the column order specified in .without_all and .margins and .with_all.\n\n\nsummarise_with_margins() defaults to is.data.frame(.data), union_all_with_margins() defaults to FALSE.\n\n\nThis is because pipelines using lazy tables should perform the SQL ORDER BY as last as possible.\n\n\nAs a result of sorting, in the case of lazy tables, NA may come first, unlike R.\n\n\nSee arrange() documentation of {dbplyr} for details.\n\n\n\n\nnest_with_margins() and nest_by_with_margins() default to TRUE.\n\n\n\n\n\n\n.key\n\n\nThe name of the resulting nested column.\n\n\nFor nest_with_margins(), passed to .key argument of tidyr::nest()\n\n\nFor nest_by_with_margins(), passed to .key argument of dplyr::nest_by()\n\n\n\n\n\n\n.names_sep\n\n\nPassed to .names_sep argument of tidyr::nest().\n\n\n\n\n.keep\n\n\nShould the grouping columns be kept in the list column. Passed to .keep argument of dplyr::nest_by().\n\n\n\n\n\n\nsummarise_with_margins()\n\n\nThis is similar to dplyr::summarise() but creates an additional .margin_name category for each grouping variable. It assumes a hierarchy of groups and the higher level groups should be provided first.\n\n\nRegular groups, not used for totals/subtotals can be provided through the .without_all argument and will be used as parent groups.\n\n\nIf you want to create its own total margin (such as “(all)”) for a variable that is a regular group and has no hierarchy, specify it with .with_all. If there is more than one .with_all, all combinations of them are generated.\n\n\nunion_all_with_margins()\n\n\nConsider each margin as a new category, duplicate the rows and merge them vertically (like UNION ALL in SQL).\n\n\nThe use of arguments in common with summarise_with_margins() is the same as for it.\n\n\nBe aware that the number of rows can be huge.\n\n\nnest_with_margins()\n\n\nRun like tidyr::nest(&lt;data&gt;, .by = c({{ .without_all }} , {{ .margins }} , {{ .with_all }})) on the result of union_all_with_margins().\n\n\nOnly works for a local data frame.\n\n\nnest_by_with_margins()\n\n\nRun like dplyr::nest_by(&lt;data&gt;, dplyr::pick({{ .without_all }} , {{ .margins }} , {{ .with_all }}) on the result of union_all_with_margins(). The result is a row-wise data frame grouped by row.\n\n\nOnly works for a local data frame.\n\n\n\n\n\nA data frame. If .data is a lazy table, the output is also a lazy table.\n\n\nMissing values are kept as missing.\n\n\nThe order of the columns is as follows from left to right: .without_all, .margins, .with_all and the remaining columns.\n\n\nColumn types specified with .margins or .with_all:\n\n\nColumns that are not originally factor or character (e.g. numeric, integer, logical) are converted to characters. This is required to add the .margin_name category.\n\n\nOriginally the factor column (assuming a local data frame):\n\n\nRemains as factor. (If ordered, remains as ordered).\n\n\nThe level of the factor depends on the case:\n\n\nIf .margin_name is NOT a NA_character (such as “(all)”):\n\n\n.margin_name is added to the beginning of the level of the factor.\n\n\n\n\nIf .margin_name is a NA_character:\n\n\nIf the column has &lt;NA&gt; in the level:\n\n\nError occurs. Because, although the values with level &lt;NA&gt; are not equal to NA_character_, they will be identical and indistinguishable when merging NA_character_ as a new category.\n\n\n\n\nIf the column does not have &lt;NA&gt; in the level:\n\n\nJust keeps the original level of factor. &lt;NA&gt; is not included in the level. This is consistent with the default base::factor() behavior (exclude = NA).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMain idea is borrowed from here.\n\n\n\n\n\n\nlibrary(\"swm\")\n\n# Make a hierarchical margin for `cyl`, `vs`.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n)\n\n    cyl    vs  n      mpg\n1 (all) (all) 32 20.09062\n2     4 (all) 11 26.66364\n3     4     0  1 26.00000\n4     4     1 10 26.73000\n5     6 (all)  7 19.74286\n6     6     0  3 20.56667\n7     6     1  4 19.12500\n8     8 (all) 14 15.10000\n9     8     0 14 15.10000\n\n# `am` does not create a hierarchy, but is an overall group variable.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am\n)\n\n   am   cyl    vs  n      mpg\n1   0 (all) (all) 19 17.14737\n2   0     4 (all)  3 22.90000\n3   0     4     1  3 22.90000\n4   0     6 (all)  4 19.12500\n5   0     6     1  4 19.12500\n6   0     8 (all) 12 15.05000\n7   0     8     0 12 15.05000\n8   1 (all) (all) 13 24.39231\n9   1     4 (all)  8 28.07500\n10  1     4     0  1 26.00000\n11  1     4     1  7 28.37143\n12  1     6 (all)  3 20.56667\n13  1     6     0  3 20.56667\n14  1     8 (all)  2 15.40000\n15  1     8     0  2 15.40000\n\n# `gear` creates \"(all)\" margins on itself.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n   am   cyl    vs  gear  n      mpg\n1   0 (all) (all) (all) 19 17.14737\n2   0 (all) (all)     3 15 16.10667\n3   0 (all) (all)     4  4 21.05000\n4   0     4 (all) (all)  3 22.90000\n5   0     4 (all)     3  1 21.50000\n6   0     4 (all)     4  2 23.60000\n7   0     4     1 (all)  3 22.90000\n8   0     4     1     3  1 21.50000\n9   0     4     1     4  2 23.60000\n10  0     6 (all) (all)  4 19.12500\n11  0     6 (all)     3  2 19.75000\n12  0     6 (all)     4  2 18.50000\n13  0     6     1 (all)  4 19.12500\n14  0     6     1     3  2 19.75000\n15  0     6     1     4  2 18.50000\n16  0     8 (all) (all) 12 15.05000\n17  0     8 (all)     3 12 15.05000\n18  0     8     0 (all) 12 15.05000\n19  0     8     0     3 12 15.05000\n20  1 (all) (all) (all) 13 24.39231\n21  1 (all) (all)     4  8 26.27500\n22  1 (all) (all)     5  5 21.38000\n23  1     4 (all) (all)  8 28.07500\n24  1     4 (all)     4  6 28.03333\n25  1     4 (all)     5  2 28.20000\n26  1     4     0 (all)  1 26.00000\n27  1     4     0     5  1 26.00000\n28  1     4     1 (all)  7 28.37143\n29  1     4     1     4  6 28.03333\n30  1     4     1     5  1 30.40000\n31  1     6 (all) (all)  3 20.56667\n32  1     6 (all)     4  2 21.00000\n33  1     6 (all)     5  1 19.70000\n34  1     6     0 (all)  3 20.56667\n35  1     6     0     4  2 21.00000\n36  1     6     0     5  1 19.70000\n37  1     8 (all) (all)  2 15.40000\n38  1     8 (all)     5  2 15.40000\n39  1     8     0 (all)  2 15.40000\n40  1     8     0     5  2 15.40000\n\n# If `.with_all` has multiple columns, all combinations are generated.\nsummarise_with_margins(\n  mtcars,\n  n = dplyr::n(),\n  mpg = mean(mpg, na.rm = TRUE),\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = c(gear, carb)\n)\n\n    am   cyl    vs  gear  carb  n      mpg\n1    0 (all) (all) (all) (all) 19 17.14737\n2    0 (all) (all) (all)     1  3 20.33333\n3    0 (all) (all) (all)     2  6 19.30000\n4    0 (all) (all) (all)     3  3 16.30000\n5    0 (all) (all) (all)     4  7 14.30000\n6    0 (all) (all)     3 (all) 15 16.10667\n7    0 (all) (all)     3     1  3 20.33333\n8    0 (all) (all)     3     2  4 17.15000\n9    0 (all) (all)     3     3  3 16.30000\n10   0 (all) (all)     3     4  5 12.62000\n11   0 (all) (all)     4 (all)  4 21.05000\n12   0 (all) (all)     4     2  2 23.60000\n13   0 (all) (all)     4     4  2 18.50000\n14   0     4 (all) (all) (all)  3 22.90000\n15   0     4 (all) (all)     1  1 21.50000\n16   0     4 (all) (all)     2  2 23.60000\n17   0     4 (all)     3 (all)  1 21.50000\n18   0     4 (all)     3     1  1 21.50000\n19   0     4 (all)     4 (all)  2 23.60000\n20   0     4 (all)     4     2  2 23.60000\n21   0     4     1 (all) (all)  3 22.90000\n22   0     4     1 (all)     1  1 21.50000\n23   0     4     1 (all)     2  2 23.60000\n24   0     4     1     3 (all)  1 21.50000\n25   0     4     1     3     1  1 21.50000\n26   0     4     1     4 (all)  2 23.60000\n27   0     4     1     4     2  2 23.60000\n28   0     6 (all) (all) (all)  4 19.12500\n29   0     6 (all) (all)     1  2 19.75000\n30   0     6 (all) (all)     4  2 18.50000\n31   0     6 (all)     3 (all)  2 19.75000\n32   0     6 (all)     3     1  2 19.75000\n33   0     6 (all)     4 (all)  2 18.50000\n34   0     6 (all)     4     4  2 18.50000\n35   0     6     1 (all) (all)  4 19.12500\n36   0     6     1 (all)     1  2 19.75000\n37   0     6     1 (all)     4  2 18.50000\n38   0     6     1     3 (all)  2 19.75000\n39   0     6     1     3     1  2 19.75000\n40   0     6     1     4 (all)  2 18.50000\n41   0     6     1     4     4  2 18.50000\n42   0     8 (all) (all) (all) 12 15.05000\n43   0     8 (all) (all)     2  4 17.15000\n44   0     8 (all) (all)     3  3 16.30000\n45   0     8 (all) (all)     4  5 12.62000\n46   0     8 (all)     3 (all) 12 15.05000\n47   0     8 (all)     3     2  4 17.15000\n48   0     8 (all)     3     3  3 16.30000\n49   0     8 (all)     3     4  5 12.62000\n50   0     8     0 (all) (all) 12 15.05000\n51   0     8     0 (all)     2  4 17.15000\n52   0     8     0 (all)     3  3 16.30000\n53   0     8     0 (all)     4  5 12.62000\n54   0     8     0     3 (all) 12 15.05000\n55   0     8     0     3     2  4 17.15000\n56   0     8     0     3     3  3 16.30000\n57   0     8     0     3     4  5 12.62000\n58   1 (all) (all) (all) (all) 13 24.39231\n59   1 (all) (all) (all)     1  4 29.10000\n60   1 (all) (all) (all)     2  4 27.05000\n61   1 (all) (all) (all)     4  3 19.26667\n62   1 (all) (all) (all)     6  1 19.70000\n63   1 (all) (all) (all)     8  1 15.00000\n64   1 (all) (all)     4 (all)  8 26.27500\n65   1 (all) (all)     4     1  4 29.10000\n66   1 (all) (all)     4     2  2 25.90000\n67   1 (all) (all)     4     4  2 21.00000\n68   1 (all) (all)     5 (all)  5 21.38000\n69   1 (all) (all)     5     2  2 28.20000\n70   1 (all) (all)     5     4  1 15.80000\n71   1 (all) (all)     5     6  1 19.70000\n72   1 (all) (all)     5     8  1 15.00000\n73   1     4 (all) (all) (all)  8 28.07500\n74   1     4 (all) (all)     1  4 29.10000\n75   1     4 (all) (all)     2  4 27.05000\n76   1     4 (all)     4 (all)  6 28.03333\n77   1     4 (all)     4     1  4 29.10000\n78   1     4 (all)     4     2  2 25.90000\n79   1     4 (all)     5 (all)  2 28.20000\n80   1     4 (all)     5     2  2 28.20000\n81   1     4     0 (all) (all)  1 26.00000\n82   1     4     0 (all)     2  1 26.00000\n83   1     4     0     5 (all)  1 26.00000\n84   1     4     0     5     2  1 26.00000\n85   1     4     1 (all) (all)  7 28.37143\n86   1     4     1 (all)     1  4 29.10000\n87   1     4     1 (all)     2  3 27.40000\n88   1     4     1     4 (all)  6 28.03333\n89   1     4     1     4     1  4 29.10000\n90   1     4     1     4     2  2 25.90000\n91   1     4     1     5 (all)  1 30.40000\n92   1     4     1     5     2  1 30.40000\n93   1     6 (all) (all) (all)  3 20.56667\n94   1     6 (all) (all)     4  2 21.00000\n95   1     6 (all) (all)     6  1 19.70000\n96   1     6 (all)     4 (all)  2 21.00000\n97   1     6 (all)     4     4  2 21.00000\n98   1     6 (all)     5 (all)  1 19.70000\n99   1     6 (all)     5     6  1 19.70000\n100  1     6     0 (all) (all)  3 20.56667\n101  1     6     0 (all)     4  2 21.00000\n102  1     6     0 (all)     6  1 19.70000\n103  1     6     0     4 (all)  2 21.00000\n104  1     6     0     4     4  2 21.00000\n105  1     6     0     5 (all)  1 19.70000\n106  1     6     0     5     6  1 19.70000\n107  1     8 (all) (all) (all)  2 15.40000\n108  1     8 (all) (all)     4  1 15.80000\n109  1     8 (all) (all)     8  1 15.00000\n110  1     8 (all)     5 (all)  2 15.40000\n111  1     8 (all)     5     4  1 15.80000\n112  1     8 (all)     5     8  1 15.00000\n113  1     8     0 (all) (all)  2 15.40000\n114  1     8     0 (all)     4  1 15.80000\n115  1     8     0 (all)     8  1 15.00000\n116  1     8     0     5 (all)  2 15.40000\n117  1     8     0     5     4  1 15.80000\n118  1     8     0     5     8  1 15.00000\n\n# union_all_with_margins()\nunion_all_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n                          am   cyl    vs  gear  mpg  disp  hp drat    wt  qsec\nMazda RX4...1              1 (all) (all) (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...2          1 (all) (all) (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...3             1 (all) (all) (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...4         0 (all) (all) (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...5      0 (all) (all) (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...6                0 (all) (all) (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...7             0 (all) (all) (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...8              0 (all) (all) (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...9               0 (all) (all) (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...10              0 (all) (all) (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...11             0 (all) (all) (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...12            0 (all) (all) (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...13            0 (all) (all) (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...14           0 (all) (all) (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...15    0 (all) (all) (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...16   0 (all) (all) (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...17     0 (all) (all) (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...18              1 (all) (all) (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...19           1 (all) (all) (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...20        1 (all) (all) (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...21         0 (all) (all) (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...22      0 (all) (all) (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...23           0 (all) (all) (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...24            0 (all) (all) (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...25      0 (all) (all) (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...26             1 (all) (all) (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...27         1 (all) (all) (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...28          1 (all) (all) (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...29        1 (all) (all) (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...30          1 (all) (all) (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...31         1 (all) (all) (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...32            1 (all) (all) (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...33             1 (all) (all)     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...34         1 (all) (all)     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...35            1 (all) (all)     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...36        0 (all) (all)     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...37     0 (all) (all)     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...38               0 (all) (all)     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...39            0 (all) (all)     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...40             0 (all) (all)     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...41              0 (all) (all)     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...42              0 (all) (all)     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...43             0 (all) (all)     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...44            0 (all) (all)     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...45            0 (all) (all)     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...46           0 (all) (all)     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...47    0 (all) (all)     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...48   0 (all) (all)     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...49     0 (all) (all)     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...50              1 (all) (all)     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...51           1 (all) (all)     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...52        1 (all) (all)     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...53         0 (all) (all)     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...54      0 (all) (all)     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...55           0 (all) (all)     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...56            0 (all) (all)     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...57      0 (all) (all)     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...58             1 (all) (all)     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...59         1 (all) (all)     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...60          1 (all) (all)     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...61        1 (all) (all)     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...62          1 (all) (all)     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...63         1 (all) (all)     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...64            1 (all) (all)     4 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...65             1     6 (all) (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...66         1     6 (all) (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...67            1     4 (all) (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...68        0     6 (all) (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...69     0     8 (all) (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...70               0     6 (all) (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...71            0     8 (all) (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...72             0     4 (all) (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...73              0     4 (all) (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...74              0     6 (all) (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...75             0     6 (all) (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...76            0     8 (all) (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...77            0     8 (all) (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...78           0     8 (all) (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...79    0     8 (all) (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...80   0     8 (all) (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...81     0     8 (all) (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...82              1     4 (all) (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...83           1     4 (all) (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...84        1     4 (all) (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...85         0     4 (all) (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...86      0     8 (all) (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...87           0     8 (all) (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...88            0     8 (all) (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...89      0     8 (all) (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...90             1     4 (all) (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...91         1     4 (all) (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...92          1     4 (all) (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...93        1     8 (all) (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...94          1     6 (all) (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...95         1     8 (all) (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...96            1     4 (all) (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...97             1     6 (all)     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...98         1     6 (all)     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...99            1     4 (all)     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...100       0     6 (all)     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...101    0     8 (all)     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...102              0     6 (all)     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...103           0     8 (all)     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...104            0     4 (all)     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...105             0     4 (all)     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...106             0     6 (all)     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...107            0     6 (all)     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...108           0     8 (all)     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...109           0     8 (all)     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...110          0     8 (all)     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...111   0     8 (all)     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...112  0     8 (all)     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...113    0     8 (all)     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...114             1     4 (all)     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...115          1     4 (all)     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...116       1     4 (all)     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...117        0     4 (all)     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...118     0     8 (all)     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...119          0     8 (all)     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...120           0     8 (all)     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...121     0     8 (all)     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...122            1     4 (all)     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...123        1     4 (all)     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...124         1     4 (all)     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...125       1     8 (all)     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...126         1     6 (all)     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...127        1     8 (all)     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...128           1     4 (all)     4 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...129            1     6     0 (all) 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...130        1     6     0 (all) 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...131           1     4     1 (all) 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...132       0     6     1 (all) 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...133    0     8     0 (all) 18.7 360.0 175 3.15 3.440 17.02\nValiant...134              0     6     1 (all) 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...135           0     8     0 (all) 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...136            0     4     1 (all) 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...137             0     4     1 (all) 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...138             0     6     1 (all) 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...139            0     6     1 (all) 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...140           0     8     0 (all) 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...141           0     8     0 (all) 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...142          0     8     0 (all) 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...143   0     8     0 (all) 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...144  0     8     0 (all) 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...145    0     8     0 (all) 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...146             1     4     1 (all) 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...147          1     4     1 (all) 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...148       1     4     1 (all) 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...149        0     4     1 (all) 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...150     0     8     0 (all) 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...151          0     8     0 (all) 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...152           0     8     0 (all) 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...153     0     8     0 (all) 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...154            1     4     1 (all) 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...155        1     4     0 (all) 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...156         1     4     1 (all) 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...157       1     8     0 (all) 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...158         1     6     0 (all) 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...159        1     8     0 (all) 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...160           1     4     1 (all) 21.4 121.0 109 4.11 2.780 18.60\nMazda RX4...161            1     6     0     4 21.0 160.0 110 3.90 2.620 16.46\nMazda RX4 Wag...162        1     6     0     4 21.0 160.0 110 3.90 2.875 17.02\nDatsun 710...163           1     4     1     4 22.8 108.0  93 3.85 2.320 18.61\nHornet 4 Drive...164       0     6     1     3 21.4 258.0 110 3.08 3.215 19.44\nHornet Sportabout...165    0     8     0     3 18.7 360.0 175 3.15 3.440 17.02\nValiant...166              0     6     1     3 18.1 225.0 105 2.76 3.460 20.22\nDuster 360...167           0     8     0     3 14.3 360.0 245 3.21 3.570 15.84\nMerc 240D...168            0     4     1     4 24.4 146.7  62 3.69 3.190 20.00\nMerc 230...169             0     4     1     4 22.8 140.8  95 3.92 3.150 22.90\nMerc 280...170             0     6     1     4 19.2 167.6 123 3.92 3.440 18.30\nMerc 280C...171            0     6     1     4 17.8 167.6 123 3.92 3.440 18.90\nMerc 450SE...172           0     8     0     3 16.4 275.8 180 3.07 4.070 17.40\nMerc 450SL...173           0     8     0     3 17.3 275.8 180 3.07 3.730 17.60\nMerc 450SLC...174          0     8     0     3 15.2 275.8 180 3.07 3.780 18.00\nCadillac Fleetwood...175   0     8     0     3 10.4 472.0 205 2.93 5.250 17.98\nLincoln Continental...176  0     8     0     3 10.4 460.0 215 3.00 5.424 17.82\nChrysler Imperial...177    0     8     0     3 14.7 440.0 230 3.23 5.345 17.42\nFiat 128...178             1     4     1     4 32.4  78.7  66 4.08 2.200 19.47\nHonda Civic...179          1     4     1     4 30.4  75.7  52 4.93 1.615 18.52\nToyota Corolla...180       1     4     1     4 33.9  71.1  65 4.22 1.835 19.90\nToyota Corona...181        0     4     1     3 21.5 120.1  97 3.70 2.465 20.01\nDodge Challenger...182     0     8     0     3 15.5 318.0 150 2.76 3.520 16.87\nAMC Javelin...183          0     8     0     3 15.2 304.0 150 3.15 3.435 17.30\nCamaro Z28...184           0     8     0     3 13.3 350.0 245 3.73 3.840 15.41\nPontiac Firebird...185     0     8     0     3 19.2 400.0 175 3.08 3.845 17.05\nFiat X1-9...186            1     4     1     4 27.3  79.0  66 4.08 1.935 18.90\nPorsche 914-2...187        1     4     0     5 26.0 120.3  91 4.43 2.140 16.70\nLotus Europa...188         1     4     1     5 30.4  95.1 113 3.77 1.513 16.90\nFord Pantera L...189       1     8     0     5 15.8 351.0 264 4.22 3.170 14.50\nFerrari Dino...190         1     6     0     5 19.7 145.0 175 3.62 2.770 15.50\nMaserati Bora...191        1     8     0     5 15.0 301.0 335 3.54 3.570 14.60\nVolvo 142E...192           1     4     1     4 21.4 121.0 109 4.11 2.780 18.60\n                          carb\nMazda RX4...1                4\nMazda RX4 Wag...2            4\nDatsun 710...3               1\nHornet 4 Drive...4           1\nHornet Sportabout...5        2\nValiant...6                  1\nDuster 360...7               4\nMerc 240D...8                2\nMerc 230...9                 2\nMerc 280...10                4\nMerc 280C...11               4\nMerc 450SE...12              3\nMerc 450SL...13              3\nMerc 450SLC...14             3\nCadillac Fleetwood...15      4\nLincoln Continental...16     4\nChrysler Imperial...17       4\nFiat 128...18                1\nHonda Civic...19             2\nToyota Corolla...20          1\nToyota Corona...21           1\nDodge Challenger...22        2\nAMC Javelin...23             2\nCamaro Z28...24              4\nPontiac Firebird...25        2\nFiat X1-9...26               1\nPorsche 914-2...27           2\nLotus Europa...28            2\nFord Pantera L...29          4\nFerrari Dino...30            6\nMaserati Bora...31           8\nVolvo 142E...32              2\nMazda RX4...33               4\nMazda RX4 Wag...34           4\nDatsun 710...35              1\nHornet 4 Drive...36          1\nHornet Sportabout...37       2\nValiant...38                 1\nDuster 360...39              4\nMerc 240D...40               2\nMerc 230...41                2\nMerc 280...42                4\nMerc 280C...43               4\nMerc 450SE...44              3\nMerc 450SL...45              3\nMerc 450SLC...46             3\nCadillac Fleetwood...47      4\nLincoln Continental...48     4\nChrysler Imperial...49       4\nFiat 128...50                1\nHonda Civic...51             2\nToyota Corolla...52          1\nToyota Corona...53           1\nDodge Challenger...54        2\nAMC Javelin...55             2\nCamaro Z28...56              4\nPontiac Firebird...57        2\nFiat X1-9...58               1\nPorsche 914-2...59           2\nLotus Europa...60            2\nFord Pantera L...61          4\nFerrari Dino...62            6\nMaserati Bora...63           8\nVolvo 142E...64              2\nMazda RX4...65               4\nMazda RX4 Wag...66           4\nDatsun 710...67              1\nHornet 4 Drive...68          1\nHornet Sportabout...69       2\nValiant...70                 1\nDuster 360...71              4\nMerc 240D...72               2\nMerc 230...73                2\nMerc 280...74                4\nMerc 280C...75               4\nMerc 450SE...76              3\nMerc 450SL...77              3\nMerc 450SLC...78             3\nCadillac Fleetwood...79      4\nLincoln Continental...80     4\nChrysler Imperial...81       4\nFiat 128...82                1\nHonda Civic...83             2\nToyota Corolla...84          1\nToyota Corona...85           1\nDodge Challenger...86        2\nAMC Javelin...87             2\nCamaro Z28...88              4\nPontiac Firebird...89        2\nFiat X1-9...90               1\nPorsche 914-2...91           2\nLotus Europa...92            2\nFord Pantera L...93          4\nFerrari Dino...94            6\nMaserati Bora...95           8\nVolvo 142E...96              2\nMazda RX4...97               4\nMazda RX4 Wag...98           4\nDatsun 710...99              1\nHornet 4 Drive...100         1\nHornet Sportabout...101      2\nValiant...102                1\nDuster 360...103             4\nMerc 240D...104              2\nMerc 230...105               2\nMerc 280...106               4\nMerc 280C...107              4\nMerc 450SE...108             3\nMerc 450SL...109             3\nMerc 450SLC...110            3\nCadillac Fleetwood...111     4\nLincoln Continental...112    4\nChrysler Imperial...113      4\nFiat 128...114               1\nHonda Civic...115            2\nToyota Corolla...116         1\nToyota Corona...117          1\nDodge Challenger...118       2\nAMC Javelin...119            2\nCamaro Z28...120             4\nPontiac Firebird...121       2\nFiat X1-9...122              1\nPorsche 914-2...123          2\nLotus Europa...124           2\nFord Pantera L...125         4\nFerrari Dino...126           6\nMaserati Bora...127          8\nVolvo 142E...128             2\nMazda RX4...129              4\nMazda RX4 Wag...130          4\nDatsun 710...131             1\nHornet 4 Drive...132         1\nHornet Sportabout...133      2\nValiant...134                1\nDuster 360...135             4\nMerc 240D...136              2\nMerc 230...137               2\nMerc 280...138               4\nMerc 280C...139              4\nMerc 450SE...140             3\nMerc 450SL...141             3\nMerc 450SLC...142            3\nCadillac Fleetwood...143     4\nLincoln Continental...144    4\nChrysler Imperial...145      4\nFiat 128...146               1\nHonda Civic...147            2\nToyota Corolla...148         1\nToyota Corona...149          1\nDodge Challenger...150       2\nAMC Javelin...151            2\nCamaro Z28...152             4\nPontiac Firebird...153       2\nFiat X1-9...154              1\nPorsche 914-2...155          2\nLotus Europa...156           2\nFord Pantera L...157         4\nFerrari Dino...158           6\nMaserati Bora...159          8\nVolvo 142E...160             2\nMazda RX4...161              4\nMazda RX4 Wag...162          4\nDatsun 710...163             1\nHornet 4 Drive...164         1\nHornet Sportabout...165      2\nValiant...166                1\nDuster 360...167             4\nMerc 240D...168              2\nMerc 230...169               2\nMerc 280...170               4\nMerc 280C...171              4\nMerc 450SE...172             3\nMerc 450SL...173             3\nMerc 450SLC...174            3\nCadillac Fleetwood...175     4\nLincoln Continental...176    4\nChrysler Imperial...177      4\nFiat 128...178               1\nHonda Civic...179            2\nToyota Corolla...180         1\nToyota Corona...181          1\nDodge Challenger...182       2\nAMC Javelin...183            2\nCamaro Z28...184             4\nPontiac Firebird...185       2\nFiat X1-9...186              1\nPorsche 914-2...187          2\nLotus Europa...188           2\nFord Pantera L...189         4\nFerrari Dino...190           6\nMaserati Bora...191          8\nVolvo 142E...192             2\n\n# nest_with_margins()\nnest_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n# A tibble: 40 × 5\n      am cyl   vs    gear  data             \n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&gt;           \n 1     0 (all) (all) (all) &lt;tibble [19 × 7]&gt;\n 2     0 (all) (all) 3     &lt;tibble [15 × 7]&gt;\n 3     0 (all) (all) 4     &lt;tibble [4 × 7]&gt; \n 4     0 4     (all) (all) &lt;tibble [3 × 7]&gt; \n 5     0 4     (all) 3     &lt;tibble [1 × 7]&gt; \n 6     0 4     (all) 4     &lt;tibble [2 × 7]&gt; \n 7     0 4     1     (all) &lt;tibble [3 × 7]&gt; \n 8     0 4     1     3     &lt;tibble [1 × 7]&gt; \n 9     0 4     1     4     &lt;tibble [2 × 7]&gt; \n10     0 6     (all) (all) &lt;tibble [4 × 7]&gt; \n# ℹ 30 more rows\n\n#' nest_by_with_margins()\nnest_by_with_margins(\n  mtcars,\n  .margins = c(cyl, vs),\n  .without_all = am,\n  .with_all = gear\n)\n\n# A tibble: 40 × 5\n# Rowwise:  am, cyl, vs, gear\n      am cyl   vs    gear                data\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&lt;tibble[,7]&gt;&gt;\n 1     0 (all) (all) (all)           [19 × 7]\n 2     0 (all) (all) 3               [15 × 7]\n 3     0 (all) (all) 4                [4 × 7]\n 4     0 4     (all) (all)            [3 × 7]\n 5     0 4     (all) 3                [1 × 7]\n 6     0 4     (all) 4                [2 × 7]\n 7     0 4     1     (all)            [3 × 7]\n 8     0 4     1     3                [1 × 7]\n 9     0 4     1     4                [2 × 7]\n10     0 6     (all) (all)            [4 × 7]\n# ℹ 30 more rows",
    "crumbs": [
      "Reference",
      "summarise_with_margins"
    ]
  }
]